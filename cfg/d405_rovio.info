; You can partially override parameter set in this file by creating your own subset of parameter in a separate info-file and include it with:
; #include "/home/user/workspace/rovio/cfg/rovio_custom.info"
Common
{
    doVECalibration true;                                       Should the camera-IMU extrinsics be calibrated online
    depthType 1;                                                Type of depth parametrization (0: normal, 1: inverse depth, 2: log, 3: hyperbolic)
    verbose false;                                              Is the verbose active
}

;; IMU is on PINCH teaching module
Camera0
{
  CalibrationFile  ;            Camera-Calibration file for intrinsics
  qCM_x  0.4787628682784406;                               X-entry of IMU to Camera quaterion (Hamilton)
  qCM_y  0.47218910621819;                               Y-entry of IMU to Camera quaterion (Hamilton)
  qCM_z  -0.5297620091724426;                               Z-entry of IMU to Camera quaterion (Hamilton)
  qCM_w  0.5168904889473634;                               W-entry of IMU to Camera quaterion (Hamilton)
  MrMC_x -0.027598761831721816;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
  MrMC_y 0.0008543284148297792;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
  MrMC_z -0.00037581243943354825;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
}
Camera1
{
  CalibrationFile  ;            Camera-Calibration file for intrinsics
  qCM_x  0.47762333497907855;                               X-entry of IMU to Camera quaterion (Hamilton)
  qCM_y  0.47284115567101015;                               Y-entry of IMU to Camera quaterion (Hamilton)
  qCM_z  -0.5298541454842522;                               Z-entry of IMU to Camera quaterion (Hamilton)
  qCM_w  0.5172540728697257;                               W-entry of IMU to Camera quaterion (Hamilton)
  MrMC_x -0.027779224512522394;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
  MrMC_y 0.018798796161302964;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
  MrMC_z -0.0007272261936564356;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
}

;; IMU is on SUCTION teaching module
;; IMU is 45 degrees diagonally from D405
;Camera0
;{
;  CalibrationFile  ;            Camera-Calibration file for intrinsics
;  qCM_x  0.2687823967798962;                               X-entry of IMU to Camera quaterion (Hamilton)
;  qCM_y  -0.6399118019696174;                               Y-entry of IMU to Camera quaterion (Hamilton)
;  qCM_z  0.6761065664538819;                               Z-entry of IMU to Camera quaterion (Hamilton)
;  qCM_w  0.24728287380891184;                               W-entry of IMU to Camera quaterion (Hamilton)
;  MrMC_x 0.01482783190459383;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_y -0.016987695452398286;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_z 0.0019796723596452598;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
;}
;Camera1
;{
;  CalibrationFile  ;            Camera-Calibration file for intrinsics
;  qCM_x  0.2698547523458734;                               X-entry of IMU to Camera quaterion (Hamilton)
;  qCM_y  -0.6391308312670224;                               Y-entry of IMU to Camera quaterion (Hamilton)
;  qCM_z  0.6764285827929201;                               Z-entry of IMU to Camera quaterion (Hamilton)
;  qCM_w  0.24725405060591865;                               W-entry of IMU to Camera quaterion (Hamilton)
;  MrMC_x 0.0017013202359325089;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_y -0.029200910764283536;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_z 0.0028115643412551204;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
;}

;; D405 front(positive z-axis) oriented the same way as the IMU positive y-axis
;Camera0
;{
;  CalibrationFile  ;            Camera-Calibration file for intrinsics
;  qCM_x  0.46740833753151967;                               X-entry of IMU to Camera quaterion (Hamilton)
;  qCM_y  -0.5114418729875407;                               Y-entry of IMU to Camera quaterion (Hamilton)
;  qCM_z  -0.5342704963322004;                               Z-entry of IMU to Camera quaterion (Hamilton)
;  qCM_w  0.4842640739410281;                               W-entry of IMU to Camera quaterion (Hamilton)
;  MrMC_x -0.0029066323564841626;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_y 0.029414495586271194;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_z 0.0013264083398603667;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
;}
;Camera1
;{
;  CalibrationFile  ;            Camera-Calibration file for intrinsics
;  qCM_x  0.4672591444255523;                               X-entry of IMU to Camera quaterion (Hamilton)
;  qCM_y  -0.5108288163919145;                               Y-entry of IMU to Camera quaterion (Hamilton)
;  qCM_z  -0.5339322562080071;                               Z-entry of IMU to Camera quaterion (Hamilton)
;  qCM_w  0.485426779313795;                               W-entry of IMU to Camera quaterion (Hamilton)
;  MrMC_x -0.0046076495860337685;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_y 0.03017050843449745;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_z -0.01652562140530909;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
;}

;; D405 front(positive z-axis) oriented the same way as the IMU positive x-axis
;Camera0
;{
;  CalibrationFile  ;            Camera-Calibration file for intrinsics
;  qCM_x  -0.05556630417327541;                               X-entry of IMU to Camera quaterion (Hamilton)
;  qCM_y  -0.748586188104636;                               Y-entry of IMU to Camera quaterion (Hamilton)
;  qCM_z  -0.062083991971481726;                               Z-entry of IMU to Camera quaterion (Hamilton)
;  qCM_w  0.6577816375974469;                               W-entry of IMU to Camera quaterion (Hamilton)
;  MrMC_x 0.018045515149932835;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_y 0.0028925846573431497;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_z -0.004935721204836482;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
;}
;Camera1
;{
;  CalibrationFile  ;            Camera-Calibration file for intrinsics
;  qCM_x  -0.05556630417327541;                               X-entry of IMU to Camera quaterion (Hamilton)
;  qCM_y  -0.748586188104636;                               Y-entry of IMU to Camera quaterion (Hamilton)
;  qCM_z  -0.062083991971481726;                               Z-entry of IMU to Camera quaterion (Hamilton)
;  qCM_w  0.6577816375974469;                               W-entry of IMU to Camera quaterion (Hamilton)
;  MrMC_x 0.018045515149932835;                               X-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_y 0.0028925846573431497;                               Y-entry of IMU to Camera vector (expressed in IMU CF) [m]
;  MrMC_z -0.004935721204836482;                               Z-entry of IMU to Camera vector (expressed in IMU CF) [m]
;}

Init
{
    State
    {
        pos_0 0;      X-entry of initial position (world to IMU in world) [m]
        pos_1 0;      Y-entry of initial position (world to IMU in world) [m]
        pos_2 0;      Z-entry of initial position (world to IMU in world) [m]
        vel_0 0;      X-entry of initial velocity (robocentric, IMU) [m/s]
        vel_1 0;      Y-entry of initial velocity (robocentric, IMU) [m/s]
        vel_2 0;      Z-entry of initial velocity (robocentric, IMU) [m/s]
        acb_0 0;      X-entry of accelerometer bias [m/s^2]
        acb_1 0;      Y-entry of accelerometer bias [m/s^2]
        acb_2 0;      Z-entry of accelerometer bias [m/s^2]
        gyb_0 0;      X-entry of gyroscope bias [rad/s]
        gyb_1 0;      Y-entry of gyroscope bias [rad/s]
        gyb_2 0;      Z-entry of gyroscope bias [rad/s]
        att_x 0;      X-entry of initial attitude (IMU to world, Hamilton)
        att_y 0;      Y-entry of initial attitude (IMU to world, Hamilton)
        att_z 0;      Z-entry of initial attitude (IMU to world, Hamilton)
        att_w 1;      W-entry of initial attitude (IMU to world, Hamilton)
    }
    Covariance
    {
        pos_0 0.0001;   X-Covariance of initial position [m^2]
        pos_1 0.0001;   Y-Covariance of initial position [m^2]
        pos_2 0.0001;   Z-Covariance of initial position [m^2]
        vel_0 1.0;      X-Covariance of initial velocity [m^2/s^2]
        vel_1 1.0;      Y-Covariance of initial velocity [m^2/s^2]
        vel_2 1.0;      Z-Covariance of initial velocity [m^2/s^2]
        acb_0 4e-4;     X-Covariance of initial accelerometer bias [m^2/s^4]
        acb_1 4e-4;     Y-Covariance of initial accelerometer bias [m^2/s^4]
        acb_2 4e-4;     Z-Covariance of initial accelerometer bias [m^2/s^4]
        gyb_0 3e-4;     X-Covariance of initial gyroscope bias [rad^2/s^2]
        gyb_1 3e-4;     Y-Covariance of initial gyroscope bias [rad^2/s^2]
        gyb_2 3e-4;     Z-Covariance of initial gyroscope bias [rad^2/s^2]
        vep 0.0001;     Covariance of initial linear camera-IMU extrinsics, same for all entries [m^2]
        att_0 0.1;      X-Covariance of initial attitude [rad^2]
        att_1 0.1;      Y-Covariance of initial attitude [rad^2]
        att_2 0.1;      Z-Covariance of initial attitude [rad^2]
        vea 0.01;     Covariance of initial rotational camera-IMU extrinsics, same for all entries [rad^2]
    }
}
ImgUpdate
{
  updateVecNormTermination 1e-4;
  maxNumIteration 20;
    doPatchWarping true;                    Should the patches be warped
    doFrameVisualisation false;                 Should the frames be visualized
    visualizePatches false;                   Should the patches be visualized
    useDirectMethod true;                   Should the EKF-innovation be based on direct intensity error (o.w. reprojection error)
    startLevel 2;                       Highest patch level which is being employed (must be smaller than the hardcoded template parameter)
    endLevel 1;                         Lowest patch level which is being employed
    nDetectionBuckets 100;                    Number of discretization buckets used during the candidates selection
    MahalanobisTh 9.21;                     Mahalanobis treshold for the update, 5.8858356
    UpdateNoise
    {
        pix 2;                          Covariance used for the reprojection error, 1/focal_length is roughly 1 pixel std [rad] (~1/f ~ 1/400^2 = 1/160000)
        int 400;                        Covariance used for the photometric error [intensity^2]
    }
    initCovFeature_0 0.5;                   Covariance for the initial distance (Relative to initialization depth [m^2/m^2])
    initCovFeature_1 1e-5;                    Covariance for the initial bearing vector, x-component [rad^2]
    initCovFeature_2 1e-5;                    Covariance for the initial bearing vector, y-component [rad^2]
    initDepth 0.5;                        Initial value for the initial distance parameter
    startDetectionTh 0.8;                   Threshold for detecting new features (min: 0, max: 1)
    scoreDetectionExponent 0.25;                Exponent used for weighting the distance between candidates
    penaltyDistance 100;                   Maximal distance which gets penalized during bucketing [pix]
    zeroDistancePenalty 100;                  Penalty for zero distance (max: nDetectionBuckets)
    statLocalQualityRange 10;                 Number of frames for local quality evaluation
    statLocalVisibilityRange 100;               Number of frames for local visibility evaluation
    statMinGlobalQualityRange 100;                Minimum number of frames for obtaining maximal global quality
    trackingUpperBound 0.9;                   Threshold for local quality for min overall global quality
    trackingLowerBound 0.8;                   Threshold for local quality for max overall global quality
    minTrackedAndFreeFeatures 0.75;               Minimum of amount of feature which are either tracked or free
    removalFactor 1.1;                      Factor for enforcing feature removal if not enough free
    minRelativeSTScore 0.75;                  Minimum relative ST-score for extracting new feature patch
    minAbsoluteSTScore 5.0;                   Minimum absolute ST-score for extracting new feature patch
    minTimeBetweenPatchUpdate 1.0;                Minimum time between new multilevel patch extrection [s]
    fastDetectionThreshold 5;                 Fast corner detector treshold while adding new feature
    alignConvergencePixelRange 10;                Assumed convergence range for image alignment (gets scaled with the level) [pixels]
    alignCoverageRatio 2;                   How many sigma of the uncertainty should be covered in the adaptive alignement
    alignMaxUniSample 1;                    Maximal number of alignment seeds on one side -> total number of sample = 2n+1. Carefull can get very costly if diverging!
    patchRejectionTh 50.0;                    If the average itensity error is larger than this the feauture is rejected [intensity], if smaller 0 the no check is performed
    alignmentHuberNormThreshold 10;               Intensity error threshold for Huber norm (enabled if > 0)
    alignmentGaussianWeightingSigma -1;             Width of Gaussian which is used for pixel error weighting (enabled if > 0)
    alignmentGradientExponent 0.0;                Exponent used for gradient based weighting of residuals
    useIntensityOffsetForAlignment true;            Should an intensity offset between the patches be considered
    useIntensitySqewForAlignment true;              Should an intensity sqew between the patches be considered
    removeNegativeFeatureAfterUpdate true;            Should feature with negative distance get removed
    maxUncertaintyToDepthRatioForDepthInitialization 0.3;   If set to 0.0 the depth is initialized with the standard value provided above, otherwise ROVIO attempts to figure out a median depth in each frame
    useCrossCameraMeasurements true;              Should cross measurements between frame be used. Might be turned of in calibration phase.
    doStereoInitialization true;                Should a stereo match be used for feature initialization.
    noiseGainForOffCamera 10.0;                 Factor added on update noise if not main camera
    discriminativeSamplingDistance 0.02;            Sampling distance for checking discriminativity of patch (if <= 0.0 no check is performed).
    discriminativeSamplingGain 1.1;               Gain for threshold above which the samples must lie (if <= 1.0 the patchRejectionTh is used).
    MotionDetection
    {
      isEnabled 1;                      Is the motion detection enabled
      rateOfMovingFeaturesTh 0.5;               Amount of feature with motion for overall motion detection
      pixelCoordinateMotionTh 1.0;              Threshold for motion detection for patched [pixels]
      minFeatureCountForNoMotionDetection 5;          Min feature count in frame for motion detection
  }
    ZeroVelocityUpdate
    {
        UpdateNoise
        {
            vel_0 0.01;                     X-Covariance of zero velocity update [m^2/s^2]
            vel_1 0.01;                     Y-Covariance of zero velocity update [m^2/s^2]
            vel_2 0.01;                     Z-Covariance of zero velocity update [m^2/s^2]
        }
        MahalanobisTh0 7.689997599999999;           Mahalanobid distance for zero velocity updates
        minNoMotionTime 1.0;                  Min duration of no-motion
        isEnabled 1;                      Should zero velocity update be applied, only works if MotionDetection.isEnabled is true
    }
}
Prediction
{
    PredictionNoise
    {
        pos_0 1e-4;               X-covariance parameter of position prediction [m^2/s]
        pos_1 1e-4;               Y-covariance parameter of position prediction [m^2/s]
        pos_2 1e-4;               Z-covariance parameter of position prediction [m^2/s]
        vel_0 4e-5; 4e-6            X-covariance parameter of velocity prediction [m^2/s^3]
        vel_1 4e-5;               Y-covariance parameter of velocity prediction [m^2/s^3]
        vel_2 4e-5;               Z-covariance parameter of velocity prediction [m^2/s^3]
        acb_0 1e-8;               X-covariance parameter of accelerometer bias prediction [m^2/s^5]
        acb_1 1e-8;               Y-covariance parameter of accelerometer bias prediction [m^2/s^5]
        acb_2 1e-8;               Z-covariance parameter of accelerometer bias prediction [m^2/s^5]
        gyb_0 3.8e-7;             X-covariance parameter of gyroscope bias prediction [rad^2/s^3]
        gyb_1 3.8e-7;             Y-covariance parameter of gyroscope bias prediction [rad^2/s^3]
        gyb_2 3.8e-7;             Z-covariance parameter of gyroscope bias prediction [rad^2/s^3]
        ; acb_0 1e-5;               X-covariance parameter of accelerometer bias prediction [m^2/s^5]
        ; acb_1 1e-5;               Y-covariance parameter of accelerometer bias prediction [m^2/s^5]
        ; acb_2 1e-5;               Z-covariance parameter of accelerometer bias prediction [m^2/s^5]
        ; gyb_0 3.8e-6;             X-covariance parameter of gyroscope bias prediction [rad^2/s^3]
        ; gyb_1 3.8e-6;             Y-covariance parameter of gyroscope bias prediction [rad^2/s^3]
        ; gyb_2 3.8e-6;             Z-covariance parameter of gyroscope bias prediction [rad^2/s^3]
        vep 1e-8;               Covariance parameter of linear extrinsics prediction [m^2/s]
        att_0 7.6e-7; 7.6e-7          X-Covariance parameter of attitude prediction [rad^2/s]
        att_1 7.6e-7;             Y-Covariance parameter of attitude prediction [rad^2/s]
        att_2 7.6e-7;             Z-Covariance parameter of attitude prediction [rad^2/s]
        vea 1e-8;               Covariance parameter of rotational extrinsics prediction [rad^2/s]
        dep 0.0001;             Covariance parameter of distance prediction [m^2/s]
        nor 0.00001;                Covariance parameter of bearing vector prediction [rad^2/s]
    }
    MotionDetection
    {
      inertialMotionRorTh 0.1;        Treshold on rotational rate for motion detection [rad/s]
      inertialMotionAccTh 0.5;        Treshold on acceleration for motion detection [m/s^2]
  }
}
PoseUpdate
{
    UpdateNoise
    {
        pos_0 0.01;             X-Covariance of linear pose measurement update [m^2]
        pos_1 0.01;             Y-Covariance of linear pose measurement update [m^2]
        pos_2 0.01;             Z-Covariance of linear pose measurement update [m^2]
        att_0 0.01;             X-Covariance of rotational pose measurement update [rad^2]
        att_1 0.01;             Y-Covariance of rotational pose measurement update [rad^2]
        att_2 0.01;             Z-Covariance of rotational pose measurement update [rad^2]
    }
    init_cov_IrIW 1;              Covariance of initial pose between inertial frames, linear part [m^2]
    init_cov_qWI 1;               Covariance of initial pose between inertial frames, rotational part [rad^2]
    init_cov_MrMV 1;              Covariance of initial pose between inertial frames, linear part [m^2]
    init_cov_qVM 1;               Covariance of initial pose between inertial frames, rotational part [rad^2]
    pre_cov_IrIW 1e-4;              Covariance parameter of pose between inertial frames, linear part [m^2/s]
    pre_cov_qWI 1e-4;             Covariance parameter of pose between inertial frames, rotational part [rad^2/s]
    pre_cov_MrMV 1e-4;              Covariance parameter of pose between inertial frames, linear part [m^2/s]
    pre_cov_qVM 1e-4;             Covariance parameter of pose between inertial frames, rotational part [rad^2/s]
    MahalanobisTh0 12.6511204;          Mahalonobis distance treshold of pose measurement
    doVisualization false;            Should the measured poses be vizualized
    enablePosition true;            Should the linear part be used during the update
    enableAttitude true;            Should the rotation part be used during the update (e.g. set to fals eif feeding GPS-measurement)
    noFeedbackToRovio true;           By default the pose update is only used for aligning coordinate frame. Set to false if ROVIO should benefit frome the posed measurements.
    doInertialAlignmentAtStart true;      Should the transformation between I and W be explicitly computed and set with the first pose measurement.
    timeOffset 0.0;               Time offset added to the pose measurement timestamps
    useOdometryCov false;     Should the UpdateNoise position covariance be scaled using the covariance in the Odometry message
    qVM_x 0;                  X-entry of quaterion representing IMU to reference body coordinate frame of pose measurement (Hamilton)
    qVM_y 0;                  Y-entry of quaterion representing IMU to reference body coordinate frame of pose measurement (Hamilton)
    qVM_z 0;                  Z-entry of quaterion representing IMU to reference body coordinate frame of pose measurement (Hamilton)
    qVM_w -1;                 W-entry of quaterion representing IMU to reference body coordinate frame of pose measurement (Hamilton)
    MrMV_x 0;                 X-entry of vector representing IMU to reference body coordinate frame of pose measurement
    MrMV_y 0;                 Y-entry of vector representing IMU to reference body coordinate frame of pose measurement
    MrMV_z 0;                 Z-entry of vector representing IMU to reference body coordinate frame of pose measurement
    qWI_x 0;                  X-entry of quaterion representing World to reference inertial coordinate frame of pose measurement (Hamilton)
    qWI_y 0;                  Y-entry of quaterion representing World to reference inertial coordinate frame of pose measurement (Hamilton)
    qWI_z 0;                  Z-entry of quaterion representing World to reference inertial coordinate frame of pose measurement (Hamilton)
    qWI_w -1;                 W-entry of quaterion representing World to reference inertial coordinate frame of pose measurement (Hamilton)
    IrIW_x 0;                 X-entry of vector representing World to reference inertial coordinate frame of pose measurement
    IrIW_y 0;                 Y-entry of vector representing World to reference inertial coordinate frame of pose measurement
    IrIW_z 0;                 Z-entry of vector representing World to reference inertial coordinate frame of pose measurement
}
VelocityUpdate
{
    UpdateNoise
    {
        vel_0 0.0001
        vel_1 0.0001
        vel_2 0.0001
    }
    MahalanobisTh0 7.689997599999999
    qAM_x 0
    qAM_y 0
    qAM_z 0
    qAM_w 1
}
